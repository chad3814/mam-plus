// ==UserScript==
// @name         mam-plus
// @namespace    https://github.com/GardenShade
// @version      4.0.0
// @description  Tweaks and features for MAM
// @author       GardenShade
// @run-at       document-start
// @include      https://myanonamouse.net/*
// @include      https://www.myanonamouse.net/*
// @connect      https://www.dropbox.com/*
// @icon         https://i.imgur.com/dX44pSv.png
// @resource     MP_CSS https://raw.githubusercontent.com/gardenshade/mam-plus/v4_ts/release/main.css
// @grant        GM_setValue
// @grant        GM_getValue
// @grant        GM_listValues
// @grant        GM_deleteValue
// @grant        GM_addStyle
// @grant        GM_info
// @grant        GM_getResourceText
// ==/UserScript==
"use strict";var SettingGroup,MP,__awaiter=this&&this.__awaiter||function(e,t,o,s){return new(o||(o=Promise))(function(n,i){function r(e){try{a(s.next(e))}catch(e){i(e)}}function l(e){try{a(s.throw(e))}catch(e){i(e)}}function a(e){e.done?n(e.value):new o(function(t){t(e.value)}).then(r,l)}a((s=s.apply(e,t||[])).next())})};class Util{static afTimer(){return new Promise(e=>{requestAnimationFrame(e)})}static setAttr(e,t){return new Promise(o=>{for(const o in t)e.setAttribute(o,t[o]);o()})}static objectLength(e){return Object.keys(e).length}static purgeSettings(){for(let e of GM_listValues())GM_deleteValue(e)}}class Check{static elemLoad(e){let t=document.querySelector(e);return null===t?Util.afTimer().then(()=>{this.elemLoad(e)}):Promise.resolve(t)}static updated(){return MP.DEBUG&&(console.group("Check.updated()"),console.log(`PREV VER = ${this.prevVer}`),console.log(`NEW VER = ${this.newVer}`)),new Promise(e=>{this.newVer!==this.prevVer?(MP.DEBUG&&console.log("Script is new or updated"),GM_setValue("mp_version",this.newVer),this.prevVer?(MP.DEBUG&&(console.log("Script has run before"),console.groupEnd()),e("updated")):(MP.DEBUG&&(console.log("Script has never run"),console.groupEnd()),GM_setValue("goodreadsBtn",!0),GM_setValue("alerts",!0),e("firstRun"))):(MP.DEBUG&&(console.log("Script not updated"),console.groupEnd()),e(!1))})}static page(e){return MP.DEBUG&&console.group("Check.page()"),new Promise(t=>{const o=window.location.pathname,s=o.split("/")[1],n=o.split("/")[2];let i;const r={"":"home","index.php":"home",shoutbox:"shoutbox",t:"torrent",preferences:"settings",u:"user",tor:n,millionaires:n};MP.DEBUG&&console.log(`Page @ ${s}\nSubpage @ ${n}`),r[s]?(i=r[s]===n?n.split(".")[0]:r[s],MP.DEBUG&&console.log(`Currently on ${i} page`),t(e?e===i:i)):MP.DEBUG&&console.warn(`pageStr case returns '${r[s]}'`),MP.DEBUG&&console.groupEnd()})}}Check.newVer=GM_info.script.version,Check.prevVer=GM_getValue("mp_version");class Style{constructor(){this._theme="light",this._prevTheme=this._getPrevTheme(),void 0!==this._prevTheme?this._theme=this._prevTheme:MP.DEBUG&&console.warn("no previous theme"),this._cssData=GM_getResourceText("MP_CSS")}get theme(){return this._theme}set theme(e){this._theme=e}alignToSiteTheme(){return __awaiter(this,void 0,void 0,function*(){const e=yield this._getSiteCSS();this._theme=e.indexOf("dark")>0?"dark":"light",this._prevTheme!==this._theme&&this._setPrevTheme(),Check.elemLoad("body").then(()=>{const e=document.querySelector("body");e?e.classList.add(`mp_${this._theme}`):MP.DEBUG&&console.warn(`Body is ${e}`)})})}injectLink(){const e="mp_css";if(document.getElementById(e))MP.DEBUG&&console.warn(`an element with the id "${e}" already exists`);else{const t=document.createElement("style");t.id=e,t.innerText=void 0!==this._cssData?this._cssData:"",document.querySelector("head").appendChild(t)}}_getPrevTheme(){return GM_getValue("style_theme")}_setPrevTheme(){GM_setValue("style_theme",this._theme)}_getSiteCSS(){return new Promise(e=>{const t=document.querySelector('head link[href*="ICGstation"]').getAttribute("href");"string"==typeof t?e(t):MP.DEBUG&&console.warn(`themeUrl is not a string: ${t}`)})}}class Alerts{constructor(){this._settings={scope:SettingGroup.Other,type:"checkbox",title:"alerts",desc:"Enable the MAM+ Alert panel for update information, etc."}}get settings(){return this._settings}notify(e,t){return MP.DEBUG&&console.group(`Alerts.notify( ${e} )`),new Promise(o=>{if(e)if(GM_getValue("alerts")){const s=(e,t)=>{if(MP.DEBUG&&console.log(`buildMsg( ${t} )`),e.length>0&&""!==e[0]){let o=`<h4>${t}:</h4><ul>`;return e.forEach(e=>{o+=`<li>${e}</li>`},o),o+="</ul>"}return""},n=e=>{MP.DEBUG&&console.log(`buildPanel( ${e} )`),Check.elemLoad("body").then(()=>{document.body.innerHTML+=`<div class='mp_notification'>${e}<span>X</span></div>`;const t=document.querySelector(".mp_notification"),o=t.querySelector("span");try{o&&o.addEventListener("click",()=>{t&&t.remove()},!1)}catch(e){MP.DEBUG&&console.log(e)}})};let i="";"updated"===e?(MP.DEBUG&&console.log("Building update message"),i=`<strong>MAM+ has been updated!</strong> You are now using v${MP.VERSION}, created on ${MP.TIMESTAMP}. Discuss it on <a href='forums.php?action=viewtopic&topicid=41863'>the forums</a>.<hr>`,i+=s(t.UPDATE_LIST,"Changes"),i+=s(t.BUG_LIST,"Known Bugs")):"firstRun"===e?(i='<h4>Welcome to MAM+!</h4>Please head over to your <a href="/preferences/index.php">preferences</a> to enable the MAM+ settings.<br>Any bug reports, feature requests, etc. can be made on <a href="https://github.com/gardenshade/mam-plus/issues">Github</a>, <a href="/forums.php?action=viewtopic&topicid=41863">the forums</a>, or <a href="/sendmessage.php?receiver=108303">through private message</a>.',MP.DEBUG&&console.log("Building first run message")):MP.DEBUG&&console.warn(`Received msg kind: ${e}`),n(i),MP.DEBUG&&console.groupEnd(),o(!0)}else MP.DEBUG&&(console.log("Notifications are disabled."),console.groupEnd()),o(!1)})}}class Debug{constructor(){this._settings={scope:SettingGroup.Other,type:"checkbox",title:"debug",desc:"Error log (<em>Click this checkbox to enable verbose logging to the console</em>)"}}get settings(){return this._settings}}class HideHome{constructor(){if(this._settings={scope:SettingGroup.Global,type:"dropdown",title:"hideHome",tag:"Remove banner/home",options:{default:"Do not remove either",hideBanner:"Hide the banner",hideHome:"Hide the home button"},desc:"Remove the header image or Home button, because both link to the homepage"},GM_getValue(this._settings.title)){const e=GM_getValue(this._settings.title);Check.elemLoad("#mainmenu").then(()=>{"hideHome"===e?(document.body.classList.add("mp_hide_home"),console.log("[M+] Hid the home button!")):"hideBanner"===e&&(document.body.classList.add("mp_hide_banner"),console.log("[M+] Hid the banner!"))})}}get settings(){return this._settings}}class HideBrowse{constructor(){this._settings={scope:SettingGroup.Global,type:"checkbox",title:"hideBrowse",desc:"Remove the Browse button, because Browse &amp; Search are practically the same"},GM_getValue(this._settings.title)&&Check.elemLoad("#mainmenu").then(()=>{document.body.classList.add("mp_hide_browse"),console.log("[M+] Hid the browse button!")})}get settings(){return this._settings}}class VaultLink{constructor(){this._settings={scope:SettingGroup.Global,type:"checkbox",title:"vaultLink",desc:"Make the Vault link bypass the Vault Info page"},GM_getValue(this._settings.title)&&Check.elemLoad("#millionInfo").then(()=>{document.querySelector("#millionInfo").setAttribute("href","/millionaires/donate.php"),console.log("[M+] Made the vault text link to the donate page!")})}get settings(){return this._settings}}class MiniVaultInfo{constructor(){this._settings={scope:SettingGroup.Global,type:"checkbox",title:"miniVaultInfo",desc:"Shorten the Vault link & ratio text"},GM_getValue(this._settings.title)&&Check.elemLoad("#millionInfo").then(()=>{const e=document.querySelector("#millionInfo"),t=document.querySelector("#tmR");t.innerHTML=`${parseFloat(t.innerText).toFixed(2)} <img src="/pic/updownBig.png" alt="ratio">`;let o=parseInt(e.textContent.split(":")[1].split(" ")[1].replace(/,/g,""));o=Number((o/1e6).toFixed(3)),e.textContent=`Vault: ${o} million`,console.log("[M+] Shortened the vault & ratio numbers!")})}get settings(){return this._settings}}class Settings{static _getScopes(e){return MP.DEBUG&&console.log("_getScopes(",e,")"),new Promise(t=>{let o={};for(let t of e){let e=Number(t.scope);o[e]?o[e].push(t):o[e]=[t]}t(o)})}static _buildTable(e){return MP.DEBUG&&console.log("_buildTable(",e,")"),new Promise(t=>{let o='<tbody><tr><td class="row1" colspan="2">Here you can enable &amp; disable any feature from the <a href="/forums.php?action=viewtopic&topicid=41863&page=p376355#376355">MAM+ userscript</a>! However, these settings are <strong>NOT</strong> stored on MAM; they are stored within the Tampermonkey/Greasemonkey extension in your browser, and must be customized on each of your browsers/devices separately.</td></tr>';Object.keys(e).forEach(t=>{let s=Number(t);o+=`<tr><td class='row2'>${SettingGroup[s]}</td><td class='row1'>`,Object.keys(e[s]).forEach(t=>{let n=Number(t),i=e[s][n];const r={checkbox:()=>{o+=`<input type='checkbox' id='${i.title}' value='true'>${i.desc}<br>`},textbox:()=>{o+=`<span class='mp_setTag'>${i.tag}:</span> <input type='text' id='${i.title}' placeholder='${i.placeholder}' class='mp_textInput' size='25'>${i.desc}<br>`},dropdown:()=>{o+=`<span class='mp_setTag'>${i.tag}:</span> <select id='${i.title}' class='mp_dropInput'>`,i.options&&Object.keys(i.options).forEach(e=>{o+=`<option value='${e}'>${i.options[e]}</option>`}),o+=`</select>${i.desc}<br>`}};i.type&&r[i.type]()}),o+="</td></tr>"}),o+='<tr><td class="row1" colspan="2"><div id="mp_submit">Save M+ Settings</div><span class="mp_savestate" style="opacity:0">Saved!</span></td></tr></tbody>',MP.DEBUG&&console.log("RESULT:",o),t(o)})}static _getSettings(e){let t=GM_listValues();MP.DEBUG&&console.log("_getSettings(",e,")\nStored GM keys:",t),Object.keys(e).forEach(t=>{Object.keys(e[Number(t)]).forEach(o=>{let s=e[Number(t)][Number(o)];if(MP.DEBUG&&console.log("Pref:",s.title,"| Set:",GM_getValue(`${s.title}`),"| Value:",GM_getValue(`${s.title}_val`)),null!==s&&"object"==typeof s){let e=document.getElementById(s.title);const t={checkbox:()=>{e.setAttribute("checked","checked")},textbox:()=>{e.value=GM_getValue(`${s.title}_val`)},dropdown:()=>{e.value=GM_getValue(s.title)}};t[s.type]&&GM_getValue(s.title)&&t[s.type]()}})})}static _setSettings(e){MP.DEBUG&&console.log("_setSettings(",e,")"),Object.keys(e).forEach(t=>{Object.keys(e[Number(t)]).forEach(o=>{let s=e[Number(t)][Number(o)];if(null!==s&&"object"==typeof s){let e=document.getElementById(s.title);const t={checkbox:()=>{e.checked&&GM_setValue(s.title,!0)},textbox:()=>{const t=e.value;""!==t&&(GM_setValue(s.title,!0),GM_setValue(`${s.title}_val`,t))},dropdown:()=>{GM_setValue(s.title,e.value)}};t[s.type]&&t[s.type]()}})}),console.log("[M+] Saved!")}static _saveSettings(e,t){MP.DEBUG&&console.group("_saveSettings()");const o=document.querySelector("span.mp_savestate"),s=GM_listValues();o.style.opacity="0",window.clearTimeout(e),console.log("[M+] Saving...");for(let e in s)"function"!=typeof s[e]&&(["mp_version","style_theme"].includes(s[e])||GM_setValue(s[e],!1));this._setSettings(t),o.style.opacity="1";try{e=window.setTimeout(()=>{o.style.opacity="0"},2345)}catch(e){MP.DEBUG&&console.warn(e)}MP.DEBUG&&console.groupEnd()}static init(e,t){!0===e&&(MP.DEBUG&&console.group("new Settings()"),Check.elemLoad("#mainBody > table").then(()=>{MP.DEBUG&&console.log("[M+] Starting to build Settings table...");const e=document.querySelector("#mainBody > table"),o=document.createElement("h1"),s=document.createElement("table");let n;e.insertAdjacentElement("afterend",o),o.insertAdjacentElement("afterend",s),Util.setAttr(s,{class:"coltable",cellspacing:"1",style:"width:100%;min-width:100%;max-width:100%;"}),s.innerHTML="MAM+ Settings",this._getScopes(t).then(e=>(n=e,this._buildTable(e))).then(e=>(s.innerHTML=e,console.log("[M+] Added the MAM+ Settings table!"),n)).then(e=>(this._getSettings(e),e)).then(e=>{const t=document.querySelector("#mp_submit");try{t.addEventListener("click",()=>{this._saveSettings(void 0,e)},!1)}catch(e){MP.DEBUG&&console.warn(e)}MP.DEBUG&&console.groupEnd()})}))}}Settings.obj={browse:{pageTitle:"Browse &amp; Requests",hideSnatched:{id:"hideSnatched",type:"checkbox",desc:"Enable the Hide Snatched button"},plaintextSearch:{id:"plaintextSearch",type:"checkbox",desc:"Insert plaintext search results at top of page"}},torrent:{pageTitle:"Torrent",goodreadsBtn:{id:"goodreadsBtn",type:"checkbox",desc:"Enable the MAM-to-Goodreads buttons"},fetchRating:{id:"fetchRating",type:"checkbox",desc:"Retrieve Goodreads rating info if possible"},torGiftDefault:{id:"torGiftDefault",type:"textbox",tag:"Default Gift",placeholder:"ex. 5000, max",desc:"Autofills the Gift box with a specified number of points.<br>(<em>Or the max allowable value, whichever is lower</em>)"}},shoutbox:{pageTitle:"Shoutbox",priorityUsers:{id:"priorityUsers",type:"textbox",tag:"Emphasize Users",placeholder:"ex. 6, 25420, 77618",desc:"Emphasizes messages from the listed users in the shoutbox"},priorityStyle:{id:"priorityStyle",type:"textbox",tag:"Emphasis Style",placeholder:"default: 125, 125, 125, 0.3",desc:"Change the color/opacity of the highlighting rule for emphasized users' posts.<br>(<em>This is formatted as R,G,B,Opacity. RGB are 0-255 and Opacity is 0-1</em>)"},blockUsers:{id:"blockUsers",type:"textbox",tag:"Block Users",placeholder:"ex. 1234, 108303, 10000",desc:"Obscures messages from the listed users in the shoutbox"}},vault:{pageTitle:"Vault",simpleVault:{id:"simpleVault",type:"checkbox",desc:"Simplify the Vault pages. (<em>This removes everything except the donate button &amp; list of recent donations</em>)"}},user:{pageTitle:"User Pages",userGiftDefault:{id:"userGiftDefault",type:"textbox",tag:"Default Gift",placeholder:"ex. 1000, max",desc:"Autofills the Gift box with a specified number of points.<br>(<em>Or the max allowable value, whichever is lower</em>)"}},other:{pageTitle:"Other",debug:{id:"debug",type:"checkbox",desc:"Error log (<em>Click this checkbox to enable verbose logging to the console</em>)"}}},function(e){e[e.Global=0]="Global",e[e["Browse & Search"]=1]="Browse & Search",e[e["Torrent Page"]=2]="Torrent Page",e[e.Shoutbox=3]="Shoutbox",e[e["Mil. Vault"]=4]="Mil. Vault",e[e["User Pages"]=5]="User Pages",e[e.Other=6]="Other"}(SettingGroup||(SettingGroup={})),function(e){e.DEBUG=!!GM_getValue("debug"),e.CHANGELOG={UPDATE_LIST:["CODE: Moved from Coffeescript to Typescript to allow for better practices and easier contribution. This likely introduced bugs.","CODE: Script starts before the page loads and uses a CSS sheet to hopefully prevent flashing content. This likely introduced bugs. ","CODE: Made features modular. This hopefully speeds up development","FIX: Home page features were not running if navigated to via the Home button"],BUG_LIST:[]},e.TIMESTAMP="Jan 21",e.VERSION=Check.newVer,e.PREV_VER=Check.prevVer,e.errorLog=[],e.pagePath=window.location.pathname,e.mpCss=new Style,e.settingsGlob=[],e.run=(()=>{console.group(`Welcome to MAM+ v${e.VERSION}!!!`),document.cookie="mp_enabled=1;domain=myanonamouse.net;path=/";const t=new Alerts,o=new Debug;Check.updated().then(o=>{o&&t.notify(o,e.CHANGELOG)});const s=new HideHome,n=new HideBrowse,i=new VaultLink,r=new MiniVaultInfo;Check.page("settings").then(l=>{!0===l&&(e.settingsGlob.push(t.settings,s.settings,n.settings,i.settings,r.settings,o.settings),Settings.init(l,e.settingsGlob))}),Check.elemLoad('head link[href*="ICGstation"]').then(()=>{e.mpCss.injectLink(),e.mpCss.alignToSiteTheme()}),console.groupEnd()})}(MP||(MP={})),MP.run();